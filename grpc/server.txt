package main

import (
    "context"
    "fmt"
    "google.golang.org/grpc"
    "net"
    pb "grpc2/proto"
)


const (
 port = ":50051"
)

type server struct {
 pb.UnimplementedGreeterServer
}

func (s *server) SayHello(ctx context.Context, in *pb.HelloRequest) (*pb.HelloReply, error) {
 fmt.Printf("Received: %v", in.GetName())
 return &pb.HelloReply{Message: "Hello " + in.GetName()}, nil
}

func main () {
 lis, err := net.Listen("tcp", port)
 if err != nil {
  fmt.Printf("failed to listen: %v", err)
 }
 s := grpc.NewServer()
 pb.RegisterGreeterServer(s, &server{})
 fmt.Printf("server listening at %v", lis.Addr())
 if err := s.Serve(lis); err != nil {
  fmt.Printf("failed to serve: %v", err)
 }
}