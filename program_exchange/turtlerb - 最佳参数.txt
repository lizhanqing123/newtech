//------------------------------------------------------------------------
// 简称: turtletest
// 名称: turtletest
// 类别: 公式应用
// 类型: 用户应用
//------------------------------------------------------------------------

Params
	Numeric avgn(160);
	Numeric openlimit(79);
	Numeric closelimit1(17);
	Numeric n1(3);
	Numeric n2(26);
	Numeric n4(3);
Vars
	Numeric highest20;
	Numeric lowest20;
	Numeric highest18;
	Numeric lowest18;
	Numeric highest55;
	Numeric lowest55;
	Numeric highest6;
	Numeric lowest6;
	Numeric highest5;
	Numeric lowest5;
	Numeric highest2;
	Numeric lowest2;
	Numeric highest3;
	Numeric lowest3;
	Numeric highest7;
	Numeric lowest7;
	Numeric highest4;
	Numeric lowest4;
	Numeric volume;
	NumericSeries avg5;
	NumericSeries avg10;
	NumericSeries avg20;
	NumericSeries avg30;
	NumericSeries avg55;
	Numeric highestopen;
	Numeric lowestopen;

	Numeric biaslimit;
	Numeric breakline;
	Numeric avgcount;
	Numeric count;
	Numeric i;
	Numeric MinPoint;
	NumericSeries diff(0);
	NumericSeries dea(0);
	NumericSeries ema1(0);
	NumericSeries ema2(0);
	Numeric sellprice;
	NumericSeries lastopen;
	NumericSeries maxpoint;
	Numeric stoploss;
	Numeric closelimit(17);
	Numeric tmpvolume;
Begin

	If(!CallAuctionFilter()) Return;
	
	
	tmpvolume = 1;
	biaslimit = openlimit;
	lastopen = lastopen[1];
	maxpoint = maxpoint[1];
	
	Commentary( "last max point=" + Text(maxpoint[1]) );
	//biaslimit = openlimit;

	
	highest20 =Close[1];
	for  i = 1 To 20
    {
    	if (High[i] > highest20 && High[i] - Close[i] < openlimit*0.5 )
		{
			highest20 = High[i];
		}
    }
	
	
	lowest20 =Close[1];
	for  i = 1 To 20
    {
    	if (Low[i] < lowest20 &&  Close[i] - Low[i] < openlimit*0.5 )
		{
			lowest20 = Low[i];
		}
    }
	
	
	highest18 =Close[1];
	for  i = 1 To 16
    {
    	if (High[i] > highest18 && High[i] - Close[i] < openlimit*0.5 )
		{
			highest18 = High[i];
		}
    }
	
	
	lowest18 =Close[1];
	for  i = 1 To 16
    {
    	if (Low[i] < lowest18 && Close[i] - Low[i] < openlimit*0.5 )
		{
			lowest18 = Low[i];
		}
    }

	
	highest6 = HighestFC(High[1],6);
	lowest6 = LowestFC(Low[1],6);
	
	highest5 = HighestFC(High[1],5);
	lowest5 = LowestFC(Low[1],5);
	
	highest4 = HighestFC(High[1],4);
	lowest4 = LowestFC(Low[1],4);
	
	highest3 = HighestFC(High[1],3);
	lowest3 = LowestFC(Low[1],3);
	
	highest2 = HighestFC(High[1],2);
	lowest2 = LowestFC(Low[1],2);
	
	highest7 = HighestFC(High[1],7);
	lowest7 = LowestFC(Low[1],7);

	highestopen = HighestFC(High[1], 4);
	lowestopen = LowestFC(Low[1], 4);
	

	avg55 = AverageFC(Close,avgn);
	
	avg5 = AverageFC(Close,3);
	avg10 = AverageFC(Close,10);
	avg20 = AverageFC(Close,20);
	avg30 = AverageFC(Close,26);
	avg55 = AverageFC(Close,avgn);
	diff=xaverage(open,9)-xaverage(open,45); //value1是9周期指数移动平均减去45周期指数移动平均
	dea=xaverage(diff,2); //bias1是value1的2周期平均

	ema1=xaverage(open,9);
	ema2=xaverage(open,45);
	
	PlotNumeric( "avg55", avg55 );
	PlotNumeric( "avg20", avg20 );
	PlotNumeric( "avg5", avg5 );
	PlotNumeric( "avg10", avg10 );
	avgcount = 0;
	count = 0;
	i = 1;
	breakline = 0;
	volume = 10;
	
	if (Close[1] > avg55[1])
	{
		if (avg5[1] > avg10[1])
		{
			avgcount = avgcount + 1;
		}
		if (avg5[1] > avg20[1])
		{
			avgcount = avgcount + 2;
		}
		if (avg10[1] > avg20[1])
		{
			avgcount = avgcount + 2;
		}
		if (avg20[1] > avg30[1])
		{
			avgcount = avgcount + 3;
		}
		if (avg20[1] > avg20[2])
		{
			avgcount = avgcount + 1;
		}
		if (avg10[1] > avg10[2])
		{
			avgcount = avgcount + 3;
		}
		if (avg10[1] > avg10[2])
		{
			While(avg5[i] > avg20[i]  )
			{
				count = count + 1;
				i = i+1;
			}
		}
	}
	Else if (Close[1] < avg55[1] )
	{
		if (avg5[1] < avg10[1])
		{
			avgcount = avgcount - 1;
		}
		if (avg5[1] < avg20[1])
		{
			avgcount = avgcount - 2;
		}
		if (avg10[1] < avg20[1])
		{
			avgcount = avgcount - 2;
		}
		if (avg20[1] < avg30[1])
		{
			avgcount = avgcount - 3;
		}
		if (avg20[1] < avg20[2])
		{
			avgcount = avgcount - 1;
		}
		if (avg10[1] < avg10[2])
		{
			avgcount = avgcount - 3;
		}
		if (avg10[1] < avg10[2])
		{
			While(avg5[i] < avg20[i]  )
			{
				count = count - 1;
				i = i+1;
			}
		}
	}
	
	MinPoint = 1*MinMove*PriceScale;
	if (MarketPosition == 0)
	{
		if (Close[1] > avg55[1] )
		{ 
			if ( avgcount >= 9  || count >= 4  )
			{
				breakline = highestopen;
			}
			else 
			{ 
				if (highest20 - highest18 > biaslimit * 0.1)
				{
					breakline = highest18;
				}
				Else
				{ 
					breakline = highest20;
				}
			}
			biaslimit = biaslimit*0.96;
			if (Abs(breakline - highest20) < 0.5)
			{
				biaslimit = biaslimit*1.05;
			} 
			if (  ema1[1]>ema2[1] and dea[3]>dea[2] and dea[2] <dea[1] and Abs(Close[1] - avg20[1]) < biaslimit*1.1 and (avgcount >= 9 || count >= 4) and Close[1] > avg5[1]  )
			{ 
				if (CurrentBar - lastopen < 10)
				{
					volume = volume*0.9;
				}
			    Buy( 0, open );
				maxpoint = High;
				lastopen[0] = CurrentBar;
			}
			else  if ( breakline > 0 && Abs(breakline - avg20[1]) < biaslimit  && breakline > avg30[1]  && High > breakline  )
			{
 				if (Close[2] > avg55[2]  && Close[6] > avg55[6] )
				{
					Buy( 0, Max(breakline,open));
					maxpoint = High;
					lastopen[0] = CurrentBar;
				}
			} 
		}
		else if (Close[1] < avg55[1] )
		{
			if (avgcount <= -9 || count <= (0-4) )
			{
				breakline = lowestopen;
			}
			else
			{ 
				if (Abs(lowest20 - lowest18) > biaslimit * 0.1)
				{
					breakline = lowest18;
				}
				Else
				{ 
					breakline = lowest20;
				} 
			}
			biaslimit = biaslimit*1.04;
			if (Abs(breakline - lowest20) < 0.5)
			{
				biaslimit = biaslimit*1.05;
			} 
			if ( ema1[1]<ema2[1] and dea[3]<dea[2] and dea[2] >dea[1] and Abs(Close[1] - avg30[1]) < biaslimit*1.1 and (avgcount <= -9 || count <= (0-4)) and Close[1] < avg5[1] )
			{
				if (CurrentBar -lastopen < 10)
				{
					volume = volume * 0.9;
				}
				Sellshort (0,open);
				maxpoint = Low;
				lastopen[0] = CurrentBar;
			}
			else  if  (  breakline > 0 && avg20[1] - breakline < biaslimit && breakline < avg20[1] &&  Low < breakline )
			{
				if (Close[2] < avg55[2]  && Close[6] < avg55[6])
				{
					SellShort( 0, Min(breakline, open));
					maxpoint = Low;
					lastopen[0] = CurrentBar;
				}
			} 
		}
	}
	else if (MarketPosition == 1)
	{
		if (High > maxpoint)
		{
			maxpoint = High;
		}
		sellprice = 0;
		if ( Close[1] - avg20[1] > 5.06*closelimit && Close[1] - Open > 7*MinPoint )
		{
			Sell( 0, Open );
			//FileAppend( "D:\\tblog\\tb.log", "close0");
		}else if (High[1] - avg20[1] > 5.17*closelimit )
		{
			sellprice = High[1]-3*MinPoint;
			//FileAppend( "D:\\tblog\\tb.log", "close000");
		}
		else if (High[1] - avg20[1] > 3.76*closelimit )
		{
			sellprice = High[1]-14*MinPoint;
			//FileAppend( "D:\\tblog\\tb.log", "close00");
		}
		else if (Close[1] < Close[2] && Close[2] < Close[3] && Close[3] < Close[4] && Close[4] < Close[5] )
		{ 
			sellprice = Max(avg5[1],Low[1]);
			//FileAppend( "D:\\tblog\\tb.log", "close1");
		}
		else if ( Close[1] > Close[2] && Close[2] > Close[3] && Close[3] > Close[4] && Close[4] > Close[5] && Close[5] > Close[6]  &&  Close[1] - avg20[1] > closelimit * 3.35 )
		{ 
			sellprice = lowest2;
			//FileAppend( "D:\\tblog\\tb.log", "close2");
		}  
		else if ( BarsSinceLastEntry < 4 &&  (High[1] - avg20[1] >  closelimit*3.2  || High[2] - avg20[2] >  closelimit*3.2)  )
		{
			sellprice = lowest2;
			//FileAppend( "D:\\tblog\\tb.log", "close2");
		}
		else if (High[1] - avg20[1] >  closelimit*2.2 || High[2] - avg20[2] >  closelimit*2.2 || High[3] - avg20[3] >  closelimit*3 )
		{
			sellprice = lowest3;
			//FileAppend( "D:\\tblog\\tb.log", "close3");
		} 
		else if ( (High[1] - avg20[1] >  closelimit*1.8 || High[2] - avg20[2] >  closelimit*1.8 || High[3] - avg20[3] >  closelimit*1.8) && Close[1] - AvgEntryPrice > closelimit*2.8 )
		{
			sellprice = lowest3;
			//FileAppend( "D:\\tblog\\tb.log", "close3");
		}
		else if ( Close[1] - AvgEntryPrice > closelimit*4.4 )
		{
			sellprice = lowest4;
			//FileAppend( "D:\\tblog\\tb.log", "close4");
		}
		else if ( BarsSinceLastEntry < 3  && Close[1] - avg20[1] >  closelimit)
		{
			sellprice = lowest4;
			//FileAppend( "D:\\tblog\\tb.log", "close4");
		}
		else if (Close[1] < avg20[1] && avg5[1] < avg20[1] )
		{
			sellprice = lowest4;
			//FileAppend( "E:\\tblog\\tb.log", "close4");
		} 
 		else if (Close[1] < Low[BarsSinceEntry] && BarsSinceEntry > 3 )
		{
			sellprice = lowest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
		} 
		else if ( Close[1] - AvgEntryPrice > closelimit * 2.1  && Close[1] < avg10[1] )
		{
			sellprice = lowest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
		}
		else if (avg5[1] < avg10[1] && Close[1] < avg10[1] )
		{
			sellprice = lowest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
		} 
		else if (highest6 - lowest7 < closelimit*2.9 )
		{
			sellprice = lowest7;
			//FileAppend( "D:\\tblog\\tb.log", "close7");
		}
		else if ( lowest5 - lowest6 > closelimit )
		{
			sellprice = lowest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
			if (lowest4 - lowest5 > closelimit)
			{
				sellprice = lowest4;
				//FileAppend( "D:\\tblog\\tb.log", "close4");
			} 
			
		}
		Else
		{  
			sellprice = lowest6;
			//FileAppend( "D:\\tblog\\tb.log", "close6");
		}
		if  (Low < sellprice)
		{
			Sell( 0, Min(open, sellprice) );
			
		}
	}
	else if (MarketPosition == -1)
	{
		if (Low < maxpoint)
		{
			maxpoint = Low;
		}
		sellprice = 0;

		if ( avg20[1] - Close[1] > 5.06*closelimit && Open - Close[1] > 7*MinPoint )
		{
			BuyToCover( 0, Open );
			//FileAppend( "D:\\tblog\\tb.log", "close0");
		}
		else if (avg20[1] - Low[1] > 5.17*closelimit )
		{
			sellprice = Low[1] + 3*MinPoint;
			//FileAppend( "D:\\tblog\\tb.log", "close000");
		}
		else if (avg20[1] - Low[1] > 3.76*closelimit)
		{
			sellprice = Low[1] + 14*MinPoint;
			//FileAppend( "D:\\tblog\\tb.log", "close00");
		}
		else if (Close[1] > Close[2] && Close[2] > Close[3] && Close[3] > Close[4] && Close[4] > Close[5] )
		{ 
			sellprice = Min (avg5[1],High[1]);
			//FileAppend( "D:\\tblog\\tb.log", "close1");
		}
 		else if ( Close[1] < Close[2] && Close[2] < Close[3] && Close[3] < Close[4] && Close[4] < Close[5] && Close[5] < Close[6] &&  avg20[1] - Close[1] > 3.35* closelimit )
		{ 
			sellprice = highest2;
			//FileAppend( "D:\\tblog\\tb.log", "close2");
		}   
		else if ( BarsSinceLastEntry < 4 && (avg20[1] - Low[1] > closelimit*3.2  || (avg20[2] - Low[2]) > closelimit*3.2) )
		{
			sellprice = highest2;
			//FileAppend( "D:\\tblog\\tb.log", "close2");
		} 
		else if ( avg20[1] - Low[1] >  closelimit*2.2 || avg20[2] - Low[2] >  closelimit*2.2 || avg20[2] - Low[2] >  closelimit*2.2 )
		{
			sellprice = highest3;
			//FileAppend( "D:\\tblog\\tb.log", "close3");
		} 
		else if ( ((avg20[1] - Low[1]) > closelimit*1.8 || (avg20[2] - Low[2]) > closelimit*n1 || (avg20[3] - Low[3]) > closelimit*1.8) &&  AvgEntryPrice - Close[1] > closelimit * 2.8 )
		{
			sellprice = highest3;
			//FileAppend( "D:\\tblog\\tb.log", "close3");
		} 
		else if ( AvgEntryPrice - Close[1] > closelimit* 3.6 && lowest4 - lowest3 > closelimit )
		{
			sellprice = highest3;
			//FileAppend( "D:\\tblog\\tb.log", "close3");
		} 
		else if ( AvgEntryPrice - Close[1] > closelimit*4.4 )
		{
			sellprice = highest4;
			//FileAppend( "D:\\tblog\\tb.log", "close4");
		}
		else if ( BarsSinceLastEntry < 3 && Abs(Close[1] - avg20[1]) > closelimit)
		{
			sellprice = highest4;
			//FileAppend( "D:\\tblog\\tb.log", "close4");
		}
		else if (Close[1] > avg20[1] && avg5[1] > avg20[1] )
		{
			sellprice = highest4;
			//FileAppend( "D:\\tblog\\tb.log", "close4");
		}
 		 else if (Close[1] > High[BarsSinceEntry] && BarsSinceEntry > 3 )
		{
			sellprice = highest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
		}
		else if ( AvgEntryPrice - Close[1] > closelimit*2.1  && Close[1] > avg10[1] )
		{
			sellprice = highest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
		}
		else if (avg5[1] > avg10[1] && Close[1] > avg10[1] )
		{
			sellprice = highest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
		}
		 
		else if (Abs(lowest6 - highest7) < closelimit*2.9)
		{
			sellprice = highest7;
			//FileAppend( "D:\\tblog\\tb.log", "close7");
		}   
		else if (highest6 - highest5 > closelimit)
		{
			sellprice = highest5;
			//FileAppend( "D:\\tblog\\tb.log", "close5");
			if (highest5 - highest4 > closelimit)
			{
				sellprice = highest4;
				//FileAppend( "D:\\tblog\\tb.log", "close4");
			} 
		}
		Else
		{  
			sellprice = highest6;
			//FileAppend( "D:\\tblog\\tb.log", "close6");
		}
		if (High > sellprice)
		{
			BuyToCover( 0, Max(open, sellprice) );
		}
	}
	
	
End

//------------------------------------------------------------------------
// 编译版本	GS2015.12.25
// 用户版本	2018/12/07 21:09:03
// 版权所有	lizhanqing
// 更改声明	TradeBlazer Software保留对TradeBlazer平台
//			每一版本的TradeBlazer公式修改和重写的权利
//------------------------------------------------------------------------
